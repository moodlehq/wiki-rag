[project]
name = "wiki-rag"
description = "A simple RAG implementation using hybrid search with context optimisations against MediaWiki articles."
keywords = ["rag", "llm", "hybrid", "search", "context", "milvus", "mediawiki", "ai", "research"]

license = {text = "BSD-3-Clause"}
readme = "README.md"

authors = [
    {name = "Eloy Lafuente (stronk7)", email = "stronk7@stronk7.com"},
]

classifiers = [
    "Typing :: Typed",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    'License :: OSI Approved :: BSD License',
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dynamic = ["version"]

requires-python = ">=3.12"
dependencies = [
    "aiohttp == 3.10.10",
    "colorlog == 6.9.0",
    "fastapi == 0.115.8",
    "langchain == 0.3.19",
    "langchain-community == 0.3.18",
    "langchain-core == 0.3.37",
    "langchain-openai == 0.3.3",
    "langgraph == 0.2.69",
    "langsmith == 0.3.6",
    "pymilvus == 2.5.4",
    "python-dotenv == 1.0.1",
    "tiktoken == 0.9.0",
    "tqdm == 4.67.1",
    "uvicorn == 0.34.0",
]

[project.optional-dependencies]
dev = [
    "build == 1.2.2",
    "coverage == 7.6.9",
    "detect-secrets == 1.5.0",
    "pre-commit == 4.0.1",
    "pyright == 1.1.394",
    "ruff == 0.9.7",
]

[project.scripts]
wr-load = "wiki_rag.load.main:main"
wr-index = "wiki_rag.index.main:main"
wr-search = "wiki_rag.search.main:main"
wr-server = "wiki_rag.server.main:main"

[project.urls]
Homepage = "https://git.in.moodle.com/research/hybrid_search_context_improv"
Documentation = "https://git.in.moodle.com/research/hybrid_search_context_improv"
Repository = "https://git.in.moodle.com/research/hybrid_search_context_improv"

[tool.coverage.run]
branch = true
source = [
    "wiki_rag",
]
omit = [
    "tests"
]

[tool.pyright]
include = [
    "wiki_rag"
]
exclude = [
    "tests"
]

[tool.ruff]
line-length = 88
indent-width = 4
preview = true

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules
select = [
    "E",    # pycodestyle (errors, all them)
    "F",    # pyflakes
    "I",    # imports
    "N",    # pep8 naming
    "D",    # pydocstyle
    "Q",    # flake8-quotes
    "ASYNC",# flake8-async
    "CPY",  # copyright header
    "EM",   # flake8-errmsg
    "UP",   # pyupgrade
]
ignore = [
    "D203", # 1 blank line required before class docstring (incompatible with D211, that we use)
    "D213", # Multi-line docstring summary should start at the second line (incompatible with D212, that we use)
]

[tool.ruff.lint.isort]
lines-between-types = 1

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.per-file-ignores]
"tests/**/test_**.py" = ["D101", "D102", "D103"] # Don't require doc strings for tests

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.setuptools.packages.find]
include = ["wiki_rag"]
