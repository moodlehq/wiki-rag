# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[remote.github]
owner = "moodlehq"
repo = "wiki-rag"

[changelog]
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html),
and commits should be formatted using [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/).\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{% endif -%}
{% for group, commits in commits | filter(attribute="merge_commit", value=false) | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        {%- if commit.scope %}
            - {{ commit.scope | upper_first | trim }}: {{ commit.message | split(pat="\n") | first | upper_first | trim }}\
        {%- else %}
            - {{ commit.message | split(pat="\n") | first | upper_first | trim }}\
        {%- endif -%}
        {% if commit.remote.username %} by @{{ commit.remote.username }}{%- endif -%}
        {% if commit.remote.pr_number %} in \
          [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}) \
        {% else %} at \
          ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
        {%- endif -%}
        {% if commit.breaking %}
          {% raw %}  {% endraw %}- **BREAKING**: {{commit.breaking_description}}
        {% endif -%}
    {% endfor %}
{% endfor %}

{%- if github -%}
  {% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
    ### New Contributors ðŸ§¡:
    {% set new_contributors = true -%}
  {% endif %}\
  {% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
    - @{{ contributor.username }} made their first contribution
      {%- if contributor.pr_number %} in \
        [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
      {%- endif %}
  {%- endfor -%}
  {%- if new_contributors -%}
    {% raw %}\n{% endraw %}
  {%- endif -%}
{%- endif -%}

{%- if version -%}
    {% if previous.version %}
      **Full Changelog**: {{ self::remote_url() }}/compare/{{ previous.version }}...{{ version }}
    {% else -%}
      {% raw %}\n{% endraw %}
    {% endif %}
{% endif %}
"""
# template for the changelog footer
footer = """
{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | trim_start_matches(pat="v") }}]: \
                https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
                    /compare/{{ release.previous.version }}..{{ release.version }}
        {% endif -%}
    {% else -%}
        [unreleased]: https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
            /compare/{{ release.previous.version }}..HEAD
    {% endif -%}
{% endfor %}
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the templates
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^test", group = "Fixed" },
    { message = "^fix", group = "Fixed" },
    { message = "^feat", group = "Added" },
    { message = "^.*: fix", group = "Fixed" },
    { message = "^[a|A]dd", group = "Added" },
    { message = "^[s|S]upport", group = "Added" },
    { message = "^[r|R]emove", group = "Removed" },
    { message = "^.*: [a|A]dd", group = "Added" },
    { message = "^.*: [s|S]upport", group = "Added" },
    { message = "^.*: [r|R]emove", group = "Removed" },
    { message = "^.*: [d|D]elete", group = "Removed" },
    { message = "^.*: [d|D]eprecate", group = "Deprecated" },
    { message = "^.*[s|S]ecurity", group = "Security" },
    { message = "^.*[p|P]repare for.*release", skip = true },
    { message = "^.*", group = "Changed" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
